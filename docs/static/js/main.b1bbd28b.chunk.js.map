{"version":3,"sources":["styled.js","components/Cotizacion.js","hooks/useCriptomoneda.js","hooks/useMoneda.js","components/Error.js","components/Formulario.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["Contenedor","styled","div","ContFormulario","Boton","input","Label","label","Select","select","ErrorPa","p","ContResumen","Cotizacion","resultado","Object","keys","length","FROMSYMBOL","type","name","color","animation","TOSYMBOL","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","useCriptomoneda","stateInitial","opciones","useState","state","actualizarState","onChange","e","target","value","map","opcion","CoinInfo","Name","FullName","Id","useMoneda","codigo","nombre","Error","mensaje","Formulario","memo","setMoneda","setCriptomoneda","listadocripto","setListadoCripto","error","setError","moneda","SelectMoneda","criptomoneda","SelectCriptomoneda","useEffect","a","axios","get","data","Data","llamadaAPI","onSubmit","preventDefault","Spinner","className","App","setResultado","cargando","setCargando","url","setTimeout","DISPLAY","consultarAPI","componente","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1bbd28b.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\n\r\n\r\n\r\n\r\nexport const Contenedor = styled.div`\r\n  width:100%;\r\n  max-width:900px;\r\n  margin:0 auto;\r\n`;\r\n\r\nexport const ContFormulario = styled.div`\r\n    width:80%;\r\n    margin: 0 auto;\r\n\r\n    @media(min-width: 768px) {\r\n        width:60%;\r\n    }\r\n\r\n    @media(min-width: 992px) {\r\n        width:50%;\r\n    }\r\n`\r\n\r\n//FORMULARIO\r\nexport const Boton = styled.input`\r\n    background-color:springgreen;\r\n    color:#555;\r\n    padding:0.3rem;\r\n    width:100%;\r\n    display:block;\r\n    letter-spacing:0.1rem;\r\n    margin:1.2rem auto 1.8rem;\r\n    border:none;\r\n    outline:none;\r\n    font-size:0.9remrem;\r\n    border-radius:10px;\r\n    font-weight:bold;\r\n    transition: background-color .3s ease;\r\n\r\n    @media(min-width: 768px) {\r\n        padding:0.5rem;\r\n        font-size:1rem;\r\n    }\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        color:#000;\r\n    }\r\n`;\r\n\r\n//USEMONEDA  y USECRIPTOMONEDA HOOK\r\nexport const Label = styled.label`\r\n    color:#fff;\r\n    display:block;\r\n    font-size:0.8rem;\r\n    font-weight:700;\r\n    margin-top:0.9rem;\r\n\r\n    @media(min-width: 768px) {\r\n        font-size:1rem;\r\n    }\r\n`;\r\n\r\nexport const Select = styled.select`\r\n    --webkit-appearance:none;\r\n    font-family: 'Sansita', sans-serif;\r\n    width:100%;\r\n    padding:0.5rem;\r\n    font-size:0.9rem;\r\n    outline:none;\r\n    border:none;\r\n    border-radius:5px;\r\n    margin-top:10px;\r\n\r\n    @media(min-width: 768px) {\r\n        font-size:1rem;\r\n    }\r\n`;\r\n\r\n//COMPONENTE ERROR\r\nexport const ErrorPa = styled.p`\r\n    background-color:rgb(226, 15, 15);\r\n    color:#fff;\r\n    padding:0.3rem;\r\n    border-radius:3px;\r\n    text-align:center;\r\n    font-size:0.7rem;\r\n\r\n    @media(min-width: 768px) {\r\n        padding:0.7rem;\r\n        font-size:0.9rem;\r\n    }\r\n`;\r\n\r\n//COMPOONENTE COTIZACION\r\nexport const ContResumen = styled.div`\r\n    text-align:center;\r\n    margin-top:-1.2rem;\r\n`;","import React from 'react'\r\nimport { ContResumen } from '../styled'\r\nimport 'boxicons';\r\nimport PropTypes from 'prop-types'\r\n\r\n  \r\n  const Cotizacion = ({resultado}) => {\r\n\r\n   if(Object.keys(resultado).length === 0) return null\r\n\r\n      return (\r\n          <div>\r\n              <h2>{resultado.FROMSYMBOL} <box-icon type=\"solid\" name=\"right-arrow-alt\" color='springgreen' animation='flashing'></box-icon> {resultado.TOSYMBOL}</h2>\r\n              <ContResumen>\r\n                  <h1>{resultado.PRICE}</h1>\r\n                  <p>Precio mas alto del día: {resultado.HIGHDAY}</p>\r\n                  <p>Precio mas bajo del día: {resultado.LOWDAY}</p>\r\n                  <p>Variación 24H: {resultado.CHANGEPCT24HOUR}%</p>\r\n                  <p>Actualización: {resultado.LASTUPDATE}</p>\r\n              </ContResumen>\r\n          </div>\r\n      )\r\n  }\r\n\r\n\r\n  Cotizacion.propTypes = {\r\n    resultado: PropTypes.object.isRequired\r\n  }\r\n  \r\n  export default Cotizacion\r\n                        ","import React, { Fragment, useState } from 'react';\r\nimport { Label, Select} from '../styled'\r\n\r\n\r\nconst useCriptomoneda = (label, stateInitial, opciones) => {\r\n\r\n    const [state, actualizarState] = useState(stateInitial)\r\n\r\n    \r\n    \r\n    const SelectCriptomoneda = () => (\r\n        <Fragment>\r\n            <Label>{label}</Label>\r\n            <Select\r\n                onChange={e => actualizarState(e.target.value)}\r\n                value={state}\r\n            >\r\n                <option value=''>-- Seleccione --</option>\r\n                {opciones.map(opcion => (\r\n                    <option key={opcion.CoinInfo.Id} value={opcion.CoinInfo.Name}>{opcion.CoinInfo.FullName}</option>\r\n                ))}\r\n            </Select>\r\n        </Fragment>\r\n    )\r\n\r\n    \r\n    return[state, SelectCriptomoneda]\r\n\r\n}\r\n \r\nexport default useCriptomoneda;\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Label, Select} from '../styled'\r\n\r\n\r\nconst useMoneda = (label, stateInitial, opciones) => {\r\n\r\n    const [state, actualizarState] = useState(stateInitial)\r\n    \r\n    const SelectMoneda = () => (\r\n        <Fragment>\r\n            <Label>{label}</Label>\r\n            <Select\r\n                onChange={e => actualizarState(e.target.value)}\r\n                value={state}\r\n            >\r\n                <option value=''>-- Seleccione --</option>\r\n                { opciones.map(opcion => (\r\n                    <option key={opcion.codigo} value={opcion.codigo}>{opcion.nombre}</option>\r\n                ))}\r\n            </Select>\r\n        </Fragment>\r\n    )\r\n\r\n    \r\n    return[state, SelectMoneda]\r\n\r\n}\r\n \r\nexport default useMoneda;\r\n","import React from 'react'\r\nimport {ErrorPa} from '../styled'\r\n\r\n\r\n\r\n\r\nconst Error = ({mensaje}) => {\r\n    return (\r\n        <ErrorPa>{mensaje}</ErrorPa>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React, { memo, useEffect, useState } from 'react'\r\nimport useCriptomoneda from '../hooks/useCriptomoneda'\r\nimport useMoneda from '../hooks/useMoneda'\r\nimport Error from './Error'\r\nimport { Boton } from '../styled'\r\nimport axios from 'axios'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\n\r\n\r\nconst Formulario = memo(({setMoneda, setCriptomoneda}) => {\r\n    \r\n\r\n    const MONEDAS = [\r\n        { codigo: 'USD', nombre: 'Dólar Estadounidense'},\r\n        { codigo: 'ARS', nombre: 'Peso Argentino'},\r\n        { codigo: 'CLP', nombre: 'Peso Chileno'},\r\n        { codigo: 'COP', nombre: 'Peso Colombiano'},\r\n        { codigo: 'EUR', nombre: 'Euro'},\r\n        { codigo: 'MXN', nombre: 'Peso Mexicano'},\r\n        { codigo: 'PEN', nombre: 'Sol Peruano'},\r\n        { codigo: 'GBP', nombre: 'Libra Esterlina'}\r\n    ]\r\n\r\n    //state para guardar los tipos de criptomonedas de la API\r\n    const [listadocripto, setListadoCripto] = useState([])\r\n    const [error, setError] = useState(false)\r\n\r\n\r\n    //custom hook useMoneda\r\n    const [moneda, SelectMoneda] = useMoneda('Elige tu Moneda', '', MONEDAS)\r\n\r\n    //custom hook useCriptomoneda\r\n    const [criptomoneda, SelectCriptomoneda] = useCriptomoneda('Elige tu Criptomoneda', '', listadocripto)\r\n\r\n    //llamar a la API\r\n    useEffect(() => {\r\n        const llamadaAPI = async () => {\r\n            const url = 'https://min-api.cryptocompare.com/data/top/mktcapfull?limit=20&tsym=USD'\r\n            const {data} = await axios.get(url)\r\n            setListadoCripto(data.Data)\r\n        }\r\n\r\n        llamadaAPI()\r\n\r\n    },[])\r\n\r\n\r\n\r\n    //funcion cuando el usuario hace click\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        //validar los inputs\r\n        if(moneda === '' || criptomoneda === '') {\r\n            setError(true)\r\n            return\r\n        }\r\n\r\n        //si pasa la validacion\r\n        setError(false)\r\n\r\n        //pasar al componente principal\r\n        setMoneda(moneda)\r\n        setCriptomoneda(criptomoneda)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <form\r\n            onSubmit={handleSubmit}\r\n        >\r\n\r\n            {error && <Error mensaje='Todos los campos son Obligatorios'/>}\r\n\r\n\r\n            <SelectCriptomoneda />\r\n\r\n            <SelectMoneda />\r\n\r\n            <Boton \r\n                type='submit'\r\n                value='Calcular'\r\n            />\r\n            \r\n        </form>\r\n    )\r\n})\r\n\r\n\r\nFormulario.propTypes = {\r\n    setMoneda: PropTypes.func.isRequired,\r\n    setCriptomoneda: PropTypes.func.isRequired,\r\n\r\n}\r\n\r\nexport default Formulario\r\n","import React from 'react'\r\nimport './spinner.css'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"sk-cube-grid\">\r\n            <div className=\"sk-cube sk-cube1\"></div>\r\n            <div className=\"sk-cube sk-cube2\"></div>\r\n            <div className=\"sk-cube sk-cube3\"></div>\r\n            <div className=\"sk-cube sk-cube4\"></div>\r\n            <div className=\"sk-cube sk-cube5\"></div>\r\n            <div className=\"sk-cube sk-cube6\"></div>\r\n            <div className=\"sk-cube sk-cube7\"></div>\r\n            <div className=\"sk-cube sk-cube8\"></div>\r\n            <div className=\"sk-cube sk-cube9\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import React, { useEffect, useState } from 'react';\nimport Cotizacion from './components/Cotizacion';\nimport Formulario from './components/Formulario';\nimport Spinner from './components/Spinner';\nimport { Contenedor, ContFormulario } from './styled';\nimport axios from 'axios';\n\n\n\n\n\nfunction App() {\n  \n\n  //states para guardar los values de moneda y criptomoneda\n  const [moneda, setMoneda] = useState('')\n  const [criptomoneda, setCriptomoneda] = useState('')\n  const [resultado, setResultado] = useState({})\n  const [cargando, setCargando] = useState(false)\n\n\n  useEffect(() => {\n    //evitamos que se ejecute la primera vez\n    if(moneda === '') return\n\n    //llamada a a la API\n    const consultarAPI = async () => {\n      const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`\n      const {data} = await axios.get(url)\n      \n      //cambio el estado de cargando para mostrar el spinner\n      setCargando(true)\n\n      //Despues de 3s oculto el spinner y paso los datos dela API\n      setTimeout(() => {\n        setCargando(false)\n\n        setResultado(data.DISPLAY[criptomoneda][moneda])\n\n      }, 3000)\n\n\n    }\n    consultarAPI()\n    \n  }, [moneda, criptomoneda])\n\n\n  //mostrar el Spinner o el componente Cotizacion\n  const componente = cargando ? <Spinner /> :  <Cotizacion resultado={resultado}/>\n\n\n  return (\n   <Contenedor>\n\n     <h1>Cotiza Criptomonedas</h1>\n\n     <ContFormulario>\n\n       <Formulario \n        setMoneda={setMoneda}\n        setCriptomoneda={setCriptomoneda}\n       />\n\n      { componente }\n\n     </ContFormulario>\n\n   </Contenedor> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}